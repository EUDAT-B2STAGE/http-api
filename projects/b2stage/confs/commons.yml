version: "3"

volumes:
  sharedcerts:
    driver: local
  etcconf:
    driver: local
  irodshome:
    driver: local
  irodsvar:
    driver: local

services:
  icat:
    volumes:
      # Workaroud to make this works in extended mode
      - ${VANILLA_DIR}/projects/b2stage/scripts/subprojects.sh:/docker-entrypoint.d/subprojects.sh
      # CERTIFICATES
      - sharedcerts:/opt/certificates
      # B2ACCESS certificates
      - ${VANILLA_DIR}/projects/b2stage/builds/b2access_certificates:${B2ACCESS_CAS}
      # EXTRA EUDAT scripts
      - ${VANILLA_DIR}/projects/b2stage/builds/extra_b2access.sh:/docker-entrypoint.d/b2access.sh

  backend:
    build: ${PROJECT_DIR}/builds/backend
    image: ${COMPOSE_PROJECT_NAME}/backend:${RAPYDO_VERSION}
    volumes:
      # Uploads dir
      - ${VANILLA_DIR}/data/uploads:${UPLOAD_PATH}
      # SHARED
      - sharedcerts:/opt/certificates
      # B2ACCESS dev certificates
      - ${VANILLA_DIR}/data/certs:/usr/local/share/ca-certificates
      # # mount irods code to develop patches
      # - ${SUBMODULE_DIR}/prc/irods:/usr/local/lib/python3.6/dist-packages/irods

    environment:
      MAIN_LOGIN_ENABLE: 0 # this could disable the basic /auth/login method
      PROFILE_DISABLED: 1 # disable /auth/profile operations
      ADMINER_DISABLED: 1 # disable /admin/users operations

      MAIN_ENDPOINT: ${API_MAIN_ENDPOINT}
      PUBLIC_ENDPOINT: ${API_PUBLIC_ENDPOINT}
      ENABLE_PUBLIC_ENDPOINT: ${ENABLE_PUBLIC_ENDPOINT}
      # app credentials to work inside the b2access environment
      B2ACCESS_ENV: ${B2ACCESS_ENV}
      B2ACCESS_APPNAME: ${B2ACCESS_ACCOUNT}
      B2ACCESS_APPKEY: ${B2ACCESS_SECRET}

      # db access
      ALCHEMY_ENABLE: 1

      # irods configuration
      IRODS_ENABLE: 1
      IRODS_ANONYMOUS: ${IRODS_ANONYMOUS}

  sqlalchemyui:
    ports:
      - 8080:8080
