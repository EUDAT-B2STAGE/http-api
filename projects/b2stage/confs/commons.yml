version: '3'

volumes:
  sharedcerts:
    driver: local
  etcconf:
    driver: local
  irodshome:
    driver: local
  irodsvar:
    driver: local
  tmpuploads:
    driver: local

services:

  icat:
    environment:
      IRODS_ANONYMOUS: ${IRODS_ANONYMOUS}

    volumes:
      # Workaroud to make this works in extended mode
      # - ${PROJECT_DIR}/scripts/subprojects.sh:/docker-entrypoint.d/subprojects.sh
      - ${VANILLA_DIR}/projects/b2stage/scripts/subprojects.sh:/docker-entrypoint.d/subprojects.sh

  postgres:
    environment:
      POSTGRES_USER: "${ALCHEMY_USER}"
      POSTGRES_PASSWORD: "${ALCHEMY_PASSWORD}"
      POSTGRES_DBS: ${ALCHEMY_DBS}

  backend:
    volumes:
      # Uploads dir
      - tmpuploads:${UPLOAD_PATH}
      # SHARED
      - sharedcerts:/opt/certificates
      # B2ACCESS dev certificates
      - ${VANILLA_DIR}/data/certs:/usr/local/share/ca-certificates
      # # mount irods code to develop patches
      # - ${SUBMODULE_DIR}/prc/irods:/usr/local/lib/python3.6/dist-packages/irods
    networks:
      i_net:

    environment:
      # base the user/role mechanism on some database
      AUTH_ENABLE: 1
      AUTH_SERVICE: ${AUTH_SERVICE}
      MAIN_LOGIN_ENABLE: 0  # this could disable the basic /auth/login method
      PROFILE_DISABLED: 1   # disable /auth/profile operations
      ADMINER_DISABLED: 1   # disable /admin/users operations

      UPLOAD_PATH: ${UPLOAD_PATH}
      MAIN_ENDPOINT: ${API_MAIN_ENDPOINT}
      PUBLIC_ENDPOINT: ${API_PUBLIC_ENDPOINT}
      ENABLE_PUBLIC_ENDPOINT: ${ENABLE_PUBLIC_ENDPOINT}
      # app credentials to work inside the b2access environment
      B2ACCESS_ENV: ${B2ACCESS_ENV}
      B2ACCESS_APPNAME: ${B2ACCESS_ACCOUNT}
      B2ACCESS_APPKEY: ${B2ACCESS_SECRET}

      # db access
      ALCHEMY_ENABLE: 1
      ALCHEMY_HOST: ${ALCHEMY_HOST}
      ALCHEMY_PORT: ${ALCHEMY_PORT}
      ALCHEMY_USER: ${ALCHEMY_USER}
      ALCHEMY_PASSWORD: ${ALCHEMY_PASSWORD}
      ALCHEMY_DB: ${ALCHEMY_API_DB}
      ALCHEMY_POOLSIZE: ${ALCHEMY_POOLSIZE}

      # irods configuration
      IRODS_ENABLE: 1
      IRODS_HOST: ${IRODS_HOST}
      IRODS_PORT: ${IRODS_PORT}
      IRODS_USER: ${IRODS_USER}
      IRODS_ZONE: ${IRODS_ZONE}
      IRODS_HOME: ${IRODS_HOME}
      IRODS_DN: ${IRODS_DN}
      IRODS_PASSWORD: ${IRODS_PASSWORD}
      IRODS_AUTHSCHEME: ${IRODS_AUTHSCHEME}
      IRODS_ANONYMOUS: ${IRODS_ANONYMOUS}

      # mongodb connection
      MONGO_ENABLE: ${ACTIVATE_MONGODB}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_PORT: ${MONGO_PORT}

      AUTH_FULL_JWT_PAYLOAD: ${FULL_JWT}

  restclient:
    environment:
      IRODS_ZONE: ${IRODS_ZONE}

  proxy:
    environment:
      SMTP_ADMIN: ${SMTP_ADMIN}

  sqlalchemyui:
    ports:
      - 8080:8080
