version: "3"

volumes:
  sharedcerts:
    driver: local
  etcconf:
    driver: local
  irodshome:
    driver: local
  irodsvar:
    driver: local

services:
  ###################################
  ###      iRODS iCAT server      ###
  ###################################
  icat:
    # restart: no
    # B2safe instance on irods
    build:
      context: ${PROJECT_DIR}/builds/icat
      args:
        RAPYDO_VERSION: ${RAPYDO_VERSION}
        CURRENT_UID: ${CURRENT_UID}
        CURRENT_GID: ${CURRENT_GID}
    image: ${REGISTRY_HOST}${COMPOSE_PROJECT_NAME}/icat:${RAPYDO_VERSION}
    hostname: ${IRODS_HOST}
    # command: sleep infinity
    environment:
      ACTIVATE: ${ACTIVATE_ICAT}
      CURRENT_UID: ${CURRENT_UID}
      CURRENT_GID: ${CURRENT_GID}
      POSTGRES_USER: ${ALCHEMY_USER}
      POSTGRES_PASSWORD: ${ALCHEMY_PASSWORD}
      POSTGRES_HOST: ${ALCHEMY_HOST}
      IRODS_HOST: "${IRODS_HOST}"
      IRODS_PORT: ${IRODS_PORT}
      IRODS_ZONE: ${IRODS_ZONE}
      IRODS_USER: ${IRODS_USER}
      IRODS_PASSWORD: ${IRODS_PASSWORD}
      IRODS_DB: "${IRODS_DB}"

      IRODS_ANONYMOUS: ${IRODS_ANONYMOUS}
    volumes:
      # Workaroud to make this works in extended mode
      - ${VANILLA_DIR}/projects/b2stage/scripts/subprojects.sh:/docker-entrypoint.d/subprojects.sh
      # CERTIFICATES
      - sharedcerts:/opt/certificates
      # B2ACCESS certificates
      - ${VANILLA_DIR}/projects/b2stage/builds/b2access_certificates:${B2ACCESS_CAS}
      # EXTRA EUDAT scripts
      - ${VANILLA_DIR}/projects/b2stage/builds/extra_b2access.sh:/docker-entrypoint.d/b2access.sh

    networks:
      app_net:
        aliases:
          - ${IRODS_HOST}
      db_net:
    depends_on:
      - postgres

  backend:
    build: ${PROJECT_DIR}/builds/backend
    image: ${REGISTRY_HOST}${COMPOSE_PROJECT_NAME}/backend:${RAPYDO_VERSION}
    volumes:
      # Uploads dir
      - ${VANILLA_DIR}/data/uploads:${UPLOAD_PATH}
      # SHARED
      - sharedcerts:/opt/certificates
      # B2ACCESS dev certificates
      - ${VANILLA_DIR}/data/certs:/usr/local/share/ca-certificates
      # # mount irods code to develop patches
      # - ${SUBMODULE_DIR}/prc/irods:/usr/local/lib/python3.6/dist-packages/irods

    environment:
      MAIN_LOGIN_ENABLE: 0 # this could disable the basic /auth/login method

      MAIN_ENDPOINT: ${API_MAIN_ENDPOINT}
      PUBLIC_ENDPOINT: ${API_PUBLIC_ENDPOINT}
      ENABLE_PUBLIC_ENDPOINT: ${ENABLE_PUBLIC_ENDPOINT}
      # app credentials to work inside the b2access environment
      B2ACCESS_ENV: ${B2ACCESS_ENV}
      B2ACCESS_APPNAME: ${B2ACCESS_ACCOUNT}
      B2ACCESS_APPKEY: ${B2ACCESS_SECRET}

      # db access
      ALCHEMY_ENABLE: 1

      # irods configuration

      IRODS_ENABLE: 1
      IRODS_HOST: ${IRODS_HOST}
      IRODS_PORT: ${IRODS_PORT}
      IRODS_USER: ${IRODS_USER}
      IRODS_ZONE: ${IRODS_ZONE}
      IRODS_HOME: ${IRODS_HOME}
      IRODS_DN: ${IRODS_DN}
      IRODS_PASSWORD: ${IRODS_PASSWORD}
      IRODS_AUTHSCHEME: ${IRODS_AUTHSCHEME}
      IRODS_GUEST_USER: ${IRODS_GUEST_USER}
      IRODS_DEFAULT_ADMIN_USER: ${IRODS_DEFAULT_ADMIN_USER}
      IRODS_ANONYMOUS: ${IRODS_ANONYMOUS}
      IRODS_EXPIRATION_TIME: ${IRODS_EXPIRATION_TIME}
      IRODS_VERIFICATION_TIME: ${IRODS_VERIFICATION_TIME}
