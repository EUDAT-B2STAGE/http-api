version: '3'

volumes:
  sslcerts:
    driver: local

services:

  icat:
    command: echo enabled b2access certificates
    environment:
      ACTIVATE: 1
      B2ACCESS_CAS: ${B2ACCESS_CAS}
    volumes:
      # B2ACCESS certificates
      - sharedcerts:/opt/certificates
      - ../submodules/build-templates/b2safe/extra_b2access.sh:/docker-entrypoint.d/b2access.sh
      - ../submodules/build-templates/b2safe/b2access_certificates:${B2ACCESS_CAS}

  backend:
    # command: sleep infinity
    restart: always
    environment:
      ACTIVATE: 1
      APP_MODE: production
      FLASK_DEBUG: 0
      DEBUG_LEVEL: INFO
      NGINX_ACTIVE: "True"
      ##################
      # EUDAT RELATED
      B2ACCESS_ENV: development  # try 'integration' server
      # B2ACCESS_ENV: production
      IRODS_ANONYMOUS: ${IRODS_ANONYMOUS}
      # MAIN_LOGIN_ENABLE: 0
      ##################
    depends_on:
      # - icat
      - postgres
    # talk only to proxy
    expose:
      - 8080
    volumes:
      # B2HANDLE credentials to solve PID metadata in write mode
      - ../data/b2handle:${HANDLE_CREDENTIALS_INTERNAL_PATH}
    #   # FIX missing IP / DNS
    #   - ../projects/b2stage/builds/backend/fixip.sh:/docker-entrypoint.d/fixip.sh
    #   # # DEBUG modifications on submodules
    #   # - ../submodules/http-api/restapi:/usr/local/lib/python3.6/dist-packages/restapi

  postgres:
    restart: always
    # Activate a production ready configuration
    volumes:
      # - ../submodules/build-templates/postgres/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
      - ../submodules/build-templates/postgres/pgs_prod.sh:/docker-entrypoint-initdb.d/init-production.conf.sh:ro

  proxy:
    environment:
      ACTIVATE: 1
      DOMAIN: ${PROJECT_DOMAIN}
      MODE: ${LETSENCRYPT_MODE}
    volumes:
      # SSL / HTTPS
      - ../confs/nginx/production.conf:/etc/nginx/sites-enabled/production
      - sslcerts:/etc/letsencrypt
      # 502 Bad Gateway
      - ../projects/${COMPOSE_PROJECT_NAME}/builds/proxy/badgateway.html:/usr/share/nginx/html/custom_502.html
    ports:
      - ${PROXY_DEV_PORT}:${PROXY_DEV_PORT}   # 80 redirect
      - ${PROXY_PROD_PORT}:${PROXY_PROD_PORT} # 443 SSL

  # if using self signed certificates
  # and trying to test locally:
  restclient:
    environment:

      # ACTIVATE: 1
      ACTIVATE: 0 # change for debugging

      APP_HOST: --verify /tmp/certs/real/fullchain1.pem https://${PROJECT_DOMAIN}
      APP_PORT:
      DOMAIN: ${PROJECT_DOMAIN}
      PROXY_HOST: ${PROXY_HOST}
      IRODS_GUEST_USER: ${IRODS_USER}
    networks:
      proxy_net:
    depends_on:
      - proxy
    volumes:
      - sslcerts:/tmp/certs
