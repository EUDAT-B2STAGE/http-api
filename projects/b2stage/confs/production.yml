version: '3'

volumes:
  localdata:
    driver: local

services:

  backend:
    environment:
      ##################
      # Base info
      # ACTIVATE: 1
      APP_MODE: production
      # FLASK_DEBUG: 0
      DEBUG_LEVEL: ${LOG_LEVEL}
      NGINX_ACTIVE: "True"

    depends_on:
      # - icat
      - postgres
    # talk only to proxy
    expose:
      - 8080
    volumes:
      # B2HANDLE credentials to solve PID metadata in write mode
      - ${VANILLA_DIR}/data/b2handle:${HANDLE_CREDENTIALS_INTERNAL_PATH}

  postgres:
    # Activate a production ready configuration
    volumes:
      - ${SUBMODULE_DIR}/rapydo-confs/confs/postgresql/pgs_prod.sh:/docker-entrypoint-initdb.d/init-production.conf.sh:ro

  proxy:
    environment:
      ACTIVATE: 1
    volumes:
      # SSL / HTTPS
      - ${SUBMODULE_DIR}/rapydo-confs/confs/nginx/production_nofrontend.conf:/etc/nginx/sites-enabled/production
      # 502 Bad Gateway
      # Workaroud to make this works in extended mode
      # - ${PROJECT_DIR}/builds/proxy/badgateway.html:/usr/share/nginx/html/custom_502.html
      - ${VANILLA_DIR}/projects/b2stage/builds/proxy/badgateway.html:/usr/share/nginx/html/custom_502.html
    ports:
      - ${PROXY_DEV_PORT}:${PROXY_DEV_PORT}   # 80 redirect
      - ${PROXY_PROD_PORT}:${PROXY_PROD_PORT} # 443 SSL

  # if using self signed certificates
  # and trying to test locally:
  restclient:
    environment:

      # ACTIVATE: 1
      ACTIVATE: 0 # change for debugging

      APP_HOST: --verify /tmp/certs/real/fullchain1.pem https://${PROJECT_DOMAIN}
      APP_PORT:
      DOMAIN: ${PROJECT_DOMAIN}
      PROXY_HOST: ${PROXY_HOST}
      IRODS_GUEST_USER: ${IRODS_USER}
    networks:
      proxy_net:
    depends_on:
      - proxy
    volumes:
      - letsencrypt_certs:/tmp/certs

  ################
  icat:
    command: /docker-entrypoint.d/b2access.sh
    # command: echo enabled b2access certificates
    volumes:
      # B2ACCESS certificates
      - sharedcerts:/opt/certificates
      - ${SUBMODULE_DIR}/build-templates/b2safe/extra_b2access.sh:/docker-entrypoint.d/b2access.sh
      - ${SUBMODULE_DIR}/build-templates/b2safe/b2access_certificates:${B2ACCESS_CAS}
    environment:
      ## Activate this container only if B2ACCESS will be used
      ## In python if B2ACCESS_SECRET is empty string -> False
      ## if string with chars -> True
      ACTIVATE: ${B2ACCESS_SECRET}
      B2ACCESS_CAS: ${B2ACCESS_CAS}
      ## Warning: fake variables;
      ## icat is needed only to produce the b2access certificates
      POSTGRES_HOST: null
      POSTGRES_USER: null
      POSTGRES_PASSWORD: null
      IRODS_HOST: null
      IRODS_PORT: null
      IRODS_USER: null
      IRODS_ZONE: null
      IRODS_DB: null
      IRODS_PASSWORD: null
  ################
