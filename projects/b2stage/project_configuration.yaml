# ###############################################
# Copyright 2011-2019 EUDAT CDI - www.eudat.eu
# ###############################################

project:
  title: EUDAT-B2STAGE HTTP-API server
  description: Processing data in EUDAT domains
  version: "1.1.3"
  rapydo: "0.9"

tags:
  eudat: all endpoints associated to EUDAT services
  b2access: request/refresh authorization from B2ACCESS
  b2safe: proxy access to irods b2safe credentials
  registered: upload, download, list and delete objects
  pids: resolve and download data from EUDAT Persistent IDentifier
  publish: allow public access to data objects
  public: landing page

variables:
  # submodules:
  #   irods-client:
  #     branch: master
  #     online_url: https://github.com/irods/python-irodsclient.git
  #     path: prc
  #     if: true

  env:
    LOG_LEVEL: INFO # global, but can be configured separately in .projectrc
    # BACKEND_BUILD_MODE: backendirods
    # PYTHON_PATH: /usr/local/lib/python3.6/dist-packages

    ALLOW_ACCESS_TOKEN_PARAMETER: True
    RUN_SCHEMATHESIS: 0

    ###############################
    ## B2ACCESS
    # Register a B2ACCESS 'app' and use credentials here
    # if you want to provide the endpoints to authenticate with B2ACCESS site
    B2ACCESS_ACCOUNT:
    B2ACCESS_SECRET:

    ###############################
    ## LOCAL (container) iRODS server
    IRODS_USER: irods
    IRODS_PASSWORD: chooseapasswordwisely # NOTE: must match ALCHEMY_PASSWORD
    IRODS_ZONE: tempZone
    IRODS_HOME: home
    IRODS_GUEST_USER: guest # intended to work only with GSI
    IRODS_DEFAULT_ADMIN_USER: rodsminer # intended to work only with GSI
    # DN of your iRODS host with GSI plugin installed
    IRODS_DN: # automatically computed within the docker network
    IRODS_AUTHSCHEME: # to be auto-detected
    # IRODS_AUTHSCHEME: credentials
    # IRODS_AUTHSCHEME: GSI

    IRODS_ENABLE_CONNECTOR: True
    IRODS_HOST: rodserver.dockerized.io
    IRODS_PORT: 1247
    IRODS_DB: ICAT

    ###############################
    ## Dockerized DB
    ACTIVATE_POSTGRES: 1
    ALCHEMY_USER: rods
    ALCHEMY_PASSWORD: chooseapasswordwisely
    ALCHEMY_ENGINE: postgresql
    ALCHEMY_DBS: "ICAT SQL_API"
    ALCHEMY_DB: SQL_API

    ###############################
    ## Experimental features
    IRODS_ANONYMOUS: 0 # enable only if you know what it means
    ENABLE_PUBLIC_ENDPOINT: 0 # experimental endpoint, depending on anonymous

    AUTH_SERVICE: sqlalchemy
    API_MAIN_ENDPOINT: registered
    API_PUBLIC_ENDPOINT: public
    # LETSENCRYPT_MODE: --staging
    LETSENCRYPT_MODE:
    # irods fixed
    IRODS_CHUNKSIZE: 1048576

    B2ACCESS_ENV: development
    # B2ACCESS_ENV: staging
    # B2ACCESS_ENV: production
    B2ACCESS_CAS: /tmp/certificates/b2access
    # FULL_JWT: false

    # TO BE DEPRECATED
    HANDLE_CREDENTIALS_INTERNAL_PATH: /opt/certificates/b2handle
    HANDLE_BASE: "https://url.to.epic/handles/"

controller:
  commands:
    irods_restart:
      description: Try to restart the current iCAT server instance
      command: service irods restart
      service: icat
      user: root
