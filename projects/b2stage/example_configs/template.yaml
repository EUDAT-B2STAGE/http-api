# ###############################################
# Copyright 2011-2017 EUDAT CDI - www.eudat.eu
# ###############################################

project:
  title: EUDAT-B2STAGE HTTP-API server
  description: Processing data in EUDAT domains
  version: 1.0.2

###############################
## Please CHECK VARIABLES here
## before starting your project
###############################
variables:

  env:

    ###############################
    ## Dockerized DB
    # You may leave this like this in DEBUG mode
    ALCHEMY_USER: rods
    ALCHEMY_PASSWORD: chooseapasswordwisely
    ALCHEMY_API_DB: SQL_API

    ###############################
    ## B2ACCESS
    # Provide some existing credentials here
    # if you want to provide endpoints to authenticate with B2ACCESS
    B2ACCESS_ACCOUNT:
    B2ACCESS_SECRET:

    ###############################
    ## LOCAL iRODS server VERSION
    # NOTE: intended for DEBUG mode and to be commented in PRODUCTION
    IRODS_USER: irods
    IRODS_GUEST_USER: guest              # intended to work only with GSI
    IRODS_DEFAULT_ADMIN_USER: rodsminer  # intended to work only with GSI
    IRODS_ZONE: tempZone
    IRODS_HOME: home
    IRODS_AUTHSCHEME:   # to be auto-detected
    # IRODS_AUTHSCHEME: credentials
    # IRODS_AUTHSCHEME: GSI
    # NOTE: this must match ALCHEMY_PASSWORD if running in debug mode
    IRODS_PASSWORD: chooseapasswordwisely
    # If empty it will be automatically computed within the docker network
    IRODS_DN:

    ###############################
    ## PRODUCTION example: external iRODS server VERSION

    # IRODS_HOST: yourhostname
    # IRODS_ZONE: productionZone1
    # IRODS_HOME: home
    # # You MUST provide user/password credentials to iquery users informations
    # IRODS_AUTHSCHEME: credentials
    # IRODS_USER: httpapi
    # IRODS_PASSWORD: SETTHISPASSWORDINPRODUCTION
    # # DN of your external iRODS host (with GSI plugin installed)
    # # Needed for B2ACCESS certificates exchange
    # IRODS_DN: "/C=US/O=Globus Consortium/OU=Globus Connect Service/CN=host/yourhostname.com"

    ###############################
    ## Mongo
    # MONGO_HOST: your.host.com
    # MONGO_DATABASE: yourdb
    # MONGO_PORT: 27017

    ###############################
    ## Seadata project variable
    # SEADATA_PROJECT: 1
    SEADATA_PROJECT: 0
    SEADATA_INGESTION_DIR: batches
    SEADATA_PRODUCTION_DIR: cloud

###############################
## WARNING!! do not modify below
## if you don't know what you are doing
###############################

    # COMPOSE_PROJECT_NAME: b2stage
    # PROJECT_DOMAIN: myserver.mydomain.dev
    AUTH_SERVICE: sqlalchemy
    # AUTH_SERVICE: mongo
    API_MAIN_ENDPOINT: registered
    API_PUBLIC_ENDPOINT: public
    # LETSENCRYPT_MODE: --staging
    LETSENCRYPT_MODE:

    IRODS_ANONYMOUS: 0
    # IRODS_ANONYMOUS: 1
    IRODS_DB: ICAT
    IRODS_CHUNKSIZE: 1048576
    ALCHEMY_POOLSIZE: 30 # or 20 # (default is 5)
    B2ACCESS_CAS: /tmp/certificates/b2access

    # sqlalchemy fixed:
    ALCHEMY_ENGINE: postgresql
    ALCHEMY_DBS: 'ICAT SQL_API'

    HANDLE_CREDENTIALS_INTERNAL_PATH: /opt/certificates/b2handle
    HANDLE_BASE: "https://url.to.epic/handles/"
    # HANDLE_USER:
    # HANDLE_PREFIX:
    # HANDLE_PASS:

    # # neo4j:
    # GRAPHDB_PASSWORD: wakeupneo
    # EPIC HANDLE credentials

    # ##: OTHERs / FIXED
    # FLASK_SUBNET: 175.1.0.0
    # FLASK_FIXED_IP: 175.1.0.10
    UPLOAD_PATH: /uploads
    FULL_JWT: false

    ###############################
    ## Queue
    # # RABBITMQ_USER: whiterabbit
    # # RABBITMQ_PASSWORD: downthehole

    # # please change this:
    # RABBITMQ_HOST: your.rabbit.com
    # RABBITMQ_USER: user
    # RABBITMQ_PASSWORD: somepass

    # # tested with merret:
    # RABBITMQ_VHOST: qc
    # RABBITMQ_ROUTING_KEY: dkrz-qc
    # RABBITMQ_EXCHANGE: b2host
    # RABBITMQ_QUEUE: testqueue

    #################
    # rancher
    RESOURCES_URL: https://IP/v2-beta
    RESOURCES_KEY:
    RESOURCES_SECRET:
    RESOURCES_PROJECT:
    RESOURCES_HUB:
    RESOURCES_HUBUSER:
    RESOURCES_HUBPASS:
    # This path needs permissions to user 1001
    # as owner of subdir 'ingestion' and 'cloud'
    RESOURCES_LOCALPATH: /usr/share

    #################

  # backend:
  #   credentials:
  #     username: someotheruser
  #     password: somepassword
  #     # warning: do not change base roles for the database
  #     roles:
  #       user: normal_user
  #       internal: staff_user
  #       admin: admin_root
  #       default: normal_user

  repos:
    irods-client:
      branch: master
      online_url: https://github.com/irods/python-irodsclient.git
      path: prc
      if: true

controller:
  commands:
    irods_restart:
      description: Try to restart the current iCAT server instance
      command: service irods restart
      service: icat
      user: root

tags:
  eudat: all endpoints associated to EUDAT services
  b2access: request/refresh authorization from B2ACCESS
  b2safe: proxy access to irods b2safe credentials
  registered: upload, download, list and delete objects
  pids: resolve and download data from EUDAT Persistent IDentifier
  publish: allow public access to data objects
  public: landing page
  b2safe: proxy access to irods b2safe credentials
  # internal: for internal testing purpose only
  seadatacloud: endpoints related to the SeaDataCloud project
  ingestion: submission of files to be approved before cloud storing

# Keep track of releases and dependencies
releases:
  '0.5.1':
    type: beta
    rapydo: null
    status: released
  '0.5.2':
    type: beta
    rapydo: null
    status: discontinued
  '0.6.0':
    type: RC1
    rapydo: 0.5.3
    status: released
  '0.6.1':
    type: RC2
    rapydo: 0.5.4
    status: released
  '1.0.0':
    type: stable
    rapydo: 0.6.0
    status: released
  '1.0.1':
    type: patch
    rapydo: 0.6.1
    status: released
  '1.0.2':
    type: development
    rapydo: 0.6.1
    status: development
  '1.0.3':
    type: patch
    rapydo: 0.6.2
    status: todo
