
#######################
# Link services inside API

backend:
  user: root
  command: init
  volumes:
    - ..:/code/${COMPOSE_PROJECT_NAME}
    - ../containers/wsgi:/tmp/uwsgi
    - ../containers/nginx_internal:/etc/nginx/conf.d
  environment:
    - APP_MODE=production
    - DEBUG_LEVEL=INFO
    - VANILLA_PACKAGE=${COMPOSE_PROJECT_NAME}
    - UWSGI_MASTER=/tmp/uwsgi/starter.ini
    - NGINX_ACTIVE=true

    # base the user/role mechanism on some database
    - AUTH_ENABLE=1
    # putting this here because it should not be configurable in .env
    - AUTH_SERVICE=neo4j

    - AUTH_REGISTER_FAILED_LOGIN=${AUTH_REGISTER_FAILED_LOGIN}
    - AUTH_FORCE_FIRST_PASSWORD_CHANGE=${AUTH_FORCE_FIRST_PASSWORD_CHANGE}
    - AUTH_VERIFY_PASSWORD_STRENGTH=${AUTH_VERIFY_PASSWORD_STRENGTH}
    - AUTH_MAX_PASSWORD_VALIDITY=${AUTH_MAX_PASSWORD_VALIDITY}
    - AUTH_DISABLE_UNUSED_CREDENTIALS_AFTER=${AUTH_DISABLE_UNUSED_CREDENTIALS_AFTER}
    - AUTH_MAX_LOGIN_ATTEMPTS=${AUTH_MAX_LOGIN_ATTEMPTS}
    - AUTH_SECOND_FACTOR_AUTHENTICATION=${AUTH_SECOND_FACTOR_AUTHENTICATION}

    # # neo connection
    - GRAPHDB_ENABLE=1
    - GRAPHDB_EXTERNAL=${GRAPHDB_EXTERNAL}
    - GRAPHDB_HOST=${GRAPHDB_HOST}
    - GRAPHDB_PORT=${GRAPHDB_BOLT_PORT}
    - GRAPHDB_PASSWORD=${GRAPHDB_PASSWORD}

  links:
    - gdb:gdb

proxy:
  volumes:
    - letsencrypt_certs:/etc/letsencrypt
    - ssl_dhparam:/etc/nginx/ssl/
  links:
    - backend:api
    - frontend:html
  ports:
    - 80:80
    - 443:443

# gdb:
#   ports:
#   - 9090:7474
