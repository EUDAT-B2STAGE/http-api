
#######################
# Link services inside API

backend:
  user: root
  command: init
  volumes:
    - ..:/code/${COMPOSE_PROJECT_NAME}
    - ../containers/wsgi:/tmp/uwsgi
    - ../containers/nginx_internal:/etc/nginx/conf.d
  environment:
    APP_MODE: production
    DEBUG_LEVEL: INFO
    VANILLA_PACKAGE: ${COMPOSE_PROJECT_NAME}
    UWSGI_MASTER: /tmp/uwsgi/starter.ini
    NGINX_ACTIVE: true

    # base the user/role mechanism on some database
    AUTH_ENABLE: 1
    # putting this here because it should not be configurable in .env
    AUTH_SERVICE: neo4j

    # # neo connection
    GRAPHDB_ENABLE: 1
    GRAPHDB_EXTERNAL: ${GRAPHDB_EXTERNAL}
    GRAPHDB_HOST: ${GRAPHDB_HOST}
    GRAPHDB_PORT: ${GRAPHDB_BOLT_PORT}
    GRAPHDB_PASSWORD: ${GRAPHDB_PASSWORD}

  links:
    - gdb:gdb

proxy:
  volumes:
    - letsencrypt_certs:/etc/letsencrypt
    - ssl_dhparam:/etc/nginx/ssl/
  links:
    - backend:api
    - frontend:html
  ports:
    - 80:80
    - 443:443

gdb:
  ports:
  - 9090:7474

    links:
        - mygraph:gdb
        # Redis db (as a queue) should be called queue
        # - redqueue:queue
        # RabbitMQ used as broken, shold be called queue too??
        - rabbit:queue
        - swagger:swagger
