version: '3'

volumes:
  queuedata:
    driver: local
networks:
  # default:
  worker_net:

services:

#########################
###  QUEUE MANAGEMENT ###
#########################

  # https://hub.docker.com/_/rabbitmq/
  # http://docs.celeryproject.org/en/latest/getting-started/brokers/rabbitmq.html
  #Â default username and password of guest / guest
  rabbit:
    image: rabbitmq:3.7.5-management-alpine
    hostname: rabbit
    volumes:
      - queuedata:/var/lib/rabbitmq
    networks:
      worker_net:
        aliases:
          - ${CELERY_BROKER_HOST}
          - ${RABBITMQ_HOST}
    environment:
      ACTIVATE: 1

  celery:
    build:
      context: ${SUBMODULE_DIR}/build-templates/celery
      args:
        RAPYDO_VERSION: ${RAPYDO_VERSION}
    image: rapydo/celery:${RAPYDO_VERSION}
    # hostname: celworker
    # command: celery worker -c 1 -A rapydo.flask_ext.flask_celery.worker.celery_app
    user: root
    working_dir: /code
    environment:
      ACTIVATE: 0
      AUTH_ENABLE: 0
      MAIN_LOGIN_ENABLE: 0
      VANILLA_PACKAGE: ${B2STAGE_PROJECT}
      JWT_APP_SECRETS: ${JWT_APP_SECRETS}
    volumes:
      # Custom configuration
      - ${VANILLA_DIR}/projects/${COMPOSE_PROJECT_NAME}/project_configuration.yaml:/code/confs/project_configuration.yaml
      # Vanilla code
      - ${VANILLA_DIR}/projects/${B2STAGE_PROJECT}/backend:/code/${B2STAGE_PROJECT}
      # JWT tokens secret
      - jwt_tokens:${JWT_APP_SECRETS}
    networks:
      worker_net:

  ##########################
  ### SERVICE INTERFACES ###
  ##########################

  # http://mher.github.io/flower/reverse-proxy.html
  celeryui:
    build:
      context: ${SUBMODULE_DIR}/build-templates/celery
      args:
        RAPYDO_VERSION: ${RAPYDO_VERSION}
    image: rapydo/celery:${RAPYDO_VERSION}
    hostname: flower
    user: root
    working_dir: /code
    command: start_flower
    expose:
      - 5555
    environment:
      ACTIVATE: 0
      AUTH_ENABLE: 0
      MAIN_LOGIN_ENABLE: 0
      VANILLA_PACKAGE: ${B2STAGE_PROJECT}
      JWT_APP_SECRETS: ${JWT_APP_SECRETS}
    volumes:
      # Custom configuration
      - ${VANILLA_DIR}/projects/${COMPOSE_PROJECT_NAME}/project_configuration.yaml:/code/confs/project_configuration.yaml
      # Vanilla code
      - ${VANILLA_DIR}/projects/${B2STAGE_PROJECT}/backend:/code/${B2STAGE_PROJECT}
      # # JWT tokens secret
      # - jwt_tokens:${JWT_APP_SECRETS}
    networks:
      worker_net:
    # depends_on:
    #   - rabbit
