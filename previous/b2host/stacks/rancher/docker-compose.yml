version: '3.1'

# https://docs.docker.com/docker-cloud/apps/service-links/#discovering-services-or-containers-on-another-stack

volumes:
  mysqldata:
    driver: local
  certificates:
    driver: local
  dhparam:
    driver: local

networks:
  dbs:
  ui:

services:

  db:
    image: mysql:5.7.21
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: YOUR_MYSQL_ROOT_PASSWORD
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      dbs:
        aliases:
          - mysqlserver

  # adminer:
  #   image: adminer:4.6.1-standalone
  #   restart: always
  #   ports:
  #     - 8080:8080
  #   networks:
  #     dbs:

  # ## CREATE DATABASE IF NOT EXISTS cattle
  #     COLLATE = 'utf8_general_ci' CHARACTER SET = 'utf8';
  # ## GRANT ALL ON cattle.* TO 'cattle'@'%' IDENTIFIED BY 'YOUR_CATTLE_DB_PASSWORD';
  # ## http://YOURIP:8080/?server=mysqlserver&username=root&sql=
  # ## $ docker-compose up -d --remove-orphans

  rancher:
    image: rancher/server:v1.6.15-rc4
    command: "--db-host mysqlserver --db-port 3306 --db-pass YOUR_CATTLE_DB_PASSWORD --db-strict-enforcing"
    restart: unless-stopped
    # ports:
    #   - 8080:8080
    networks:
      dbs:
      ui:
        aliases:
          - cattle
  ## $ docker-compose logs -f rancher
  ## -e CATTLE_AGENT_IP= to own host

  proxy:
    image: rapydo/proxy:rancher
    # rapydo --services proxy build
    # docker tag rapydo/proxy:0.6.1 rapydo/proxy:rancher
    environment:
      # if empty selfsign certs are not produced
      DOMAIN: cattle.yourdomain.com
      MODE: ''
    volumes:
    - certificates:/etc/letsencrypt
    - dhparam:/etc/nginx/ssl
    ports:
      - 80:80
      - 443:443
    networks:
      ui:
