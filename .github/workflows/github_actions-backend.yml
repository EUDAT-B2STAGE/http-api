name: Backend

on:
  push:
  # schedule:
  #   - cron: "0 4 * * *"
  workflow_dispatch:

jobs:
  backend-tests:
    runs-on: ubuntu-20.04
    timeout-minutes: 20

    strategy:
      matrix:
        PROJECT: [b2stage, seadata]

    env:
      PROJECT: ${{ matrix.PROJECT }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - uses: rapydo/actions/install@v1
        with:
          project: ${PROJECT}

      - name: Run Pytest
        run: |

          rapydo pull --quiet;
          rapydo build --force;
          rapydo add task test_task;

          rapydo start;
          rapydo shell --no-tty backend 'restapi wait';

          rapydo logs

          if [[ "${PROJECT}" == "seadata" ]]; then
            rapydo --stack workers start
            sleep 20
            rapydo --stack workers logs
          fi

          rapydo shell --no-tty backend 'restapi tests --wait --destroy'

          LOGURU_LEVEL=WARNING rapydo list services
          # This should fail if at least one container is in Exit status
          [[ ! $(LOGURU_LEVEL=WARNING rapydo list services | grep -E "Exit|Restarting|Created") ]]

          docker cp ${PROJECT}_backend_1:/code/coverage.xml coverage.xml
          bash <(curl -s https://codecov.io/bash)

      - name: Print Logs
        if: failure()
        run: tail -100 data/logs/backend-server.log

      - name: Docker Logs
        if: failure()
        run: |
          rapydo logs
