13da78c37900411beb308efe1c95b99b97b6ee63 diff --git a/containers/custom/tests.yml b/containers/custom/tests.yml new file mode 100644 index 0000000..9f135d4 --- /dev/null +++ b/containers/custom/tests.yml @@ -0,0 +1,33 @@ + +####################### +# Define here your services + +gdb: + image: neo4j + ports: + - 9090:7474 + volumes: + #GRAPH DB DATA AREA - TO BE CREATED AS DOCKER VOLUME? + - restangulask_graphdbd:/data + environment: + NEO4J_AUTH: neo4j/chooseapassword + +####################### +# Link services inside API + +custombe: + extends: + file: docker-compose.yml + service: backend + links: + - gdb:gdb + +# ####################### +# # Frontend links only API + +customfe: + extends: + file: docker-compose.yml + service: frontend + links: + - custombe:myapi diff --git a/vanilla/apis/foo.py b/vanilla/apis/foo.py index df2b8a3..535054c 100644 --- a/vanilla/apis/foo.py +++ b/vanilla/apis/foo.py @@ -8,7 +8,7 @@ from restapi import get_logger from ..base import ExtendedApiResource from .. import decorators as decorate -from ..services import neo4j +# Security # from confs import config # from flask.ext.security import roles_required, auth_token_required @@ -22,3 +22,15 @@ class JustATest(ExtendedApiResource): def get(self): logger.warning("a call") return self.response('Hello world!') + + +# ##################################### +# from ..services.neo4j.graph import GraphFarm +# class GraphTest(ExtendedApiResource, GraphFarm): + +# @decorate.apimethod +# def get(self): +# graph = self.get_graph_instance() +# print(graph) +# logger.warning("a call") +# return self.response('Hello world!') diff --git a/vanilla/apis/neo4jmodels.py b/vanilla/apis/neo4jmodels.py index 6461936..2e5905d 100644 --- a/vanilla/apis/neo4jmodels.py +++ b/vanilla/apis/neo4jmodels.py @@ -4,7 +4,7 @@ from neomodel import StringProperty, \ StructuredNode, StructuredRel, RelationshipTo, RelationshipFrom -from .. import get_logger +from .... import get_logger logger = get_logger(__name__) @@ -96,10 +96,10 @@ class MetaData(StructuredNode): resource = RelationshipTo(Resource, 'DESCRIBED_BY') collection = RelationshipTo(Collection, 'DESCRIBED_BY') -ALL_GRAPH_MODELS = [ - Person, Zone, Resource, - Collection, Replication, DataObject, - PID, MetaData -] +# ALL_GRAPH_MODELS = [ +# Person, Zone, Resource, +# Collection, Replication, DataObject, +# PID, MetaData +# ] # migraph.load_models(ALL_GRAPH_MODELS) diff --git a/vanilla/jscode/tests/_empty b/vanilla/jscode/tests/_empty new file mode 100644 index 0000000..e69de29 diff --git a/vanilla/specs/tests.json b/vanilla/specs/tests.json new file mode 100644 index 0000000..6f15035 --- /dev/null +++ b/vanilla/specs/tests.json @@ -0,0 +1,8 @@ +// Configuration +{ + "custom.foo": { + "JustATest": [ + "my" + ] + } +} \ No newline at end of file
[master] Adding models for API tests
