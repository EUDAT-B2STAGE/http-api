
SWAGGER:
  ✔ enable tags description in eudat.json @done (17-01-10 07:21)
  ✔ default blueprint configuration @done (17-01-10 10:01)
    ✔ profile PUT? @done (17-01-10 10:01)
  ✔ write definition for base endpoints @done (17-01-10 10:26)
  ✔ parameters @done (17-01-12 16:54)
    ✔ schema definition for body paramaters @done (17-01-09 23:04)
    ✔ query parameters @done (17-01-12 16:54)
      ✔ attach decorator to class @done (17-01-12 16:54)
      a method to substitute an attribute of a cls?
  ✔ loops in parameter setting @refactor @done (17-01-12 23:40)
    ✔ self._params must be defined at swagger time and become global @done (17-01-12 23:40)
    ✔ query parameters association to URIs too (avoid double implementation) @done (17-01-12 23:40)
  ✔ path parameter description @done (17-01-13 06:54)
  - remove deprecated into basic.py
  - enable security bearer @definitions
  - unittests
  ☐ extras:
    - generate a new statis json only with base
    - decorate catch error?
    - automatic http forbidden error for authenticated endpoints
    - method to convert types
      swagger.py: paramtype == 'int'
      definition.py: current_params.items
    - check if one endpoint definition with two different ids (error)
    - decorated api_method: report_generic_error ?


  --- ✄ -----------------------

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
  OauthSecurity:
    type: oauth2
    flow: accessCode
    authorizationUrl: 'https://oauth.simple.api/authorization'
    tokenUrl: 'https://oauth.simple.api/token'
    scopes:
      admin: Admin scope
      user: User scope


--- ✄ -----------------------

"patterns": {
    "TODO": "TODO[\\s]*?:[\\s]*(?P<todo>.*)$",
    "NOTE": "NOTE[\\s]*?:[\\s]*(?P<note>.*)$",
    "FIXME": "TO ?FIX[\\s]*?:[\\s]*(?P<fixme>.*)$",
    "CHANGED": "CHANGED[\\s]*?:[\\s]*(?P<changed>.*)$"
    "SHUTOUT":?
    "DEBATE":?
}

--- ✄ -----------------------

ERRORS tracing in alpha testing:
 ☐ b2stage_http_api@cineca.it
   ☐ traceback and string the error
   ☐ save it into db
   ☐ response with code and email and/or github issue
   ☐ enable with some variable

Others:
- Various
  ☐ url_for inside tests
  ☐ remove _latest_token from anywhere (and test)
  ☐ ENVVAR_DEBUG should/could be splitted
    DEBUG in production + B2ACCESS dev
  ☐ deploy documentation
  ☐ lock for double authentications operations (chrome prerendering)
  ☐ fix configurations names and paths in ./confs
- Examples in meta response
    ☐ example of curl after authorized token?
    ☐ example of curl call after directory creation?
- Real DB
   ☐ postgres?
     ☐ the same used by irods??
- build sqldminer own image with php alpine?
    https://github.com/vrana/adminer/commit/7a33661b721714a8b266bf57c0065ae653bb8097#commitcomment-17728245
    https://hub.docker.com/r/clue/adminer/~/dockerfile/
- unittest for B2ACCESS...
   ☐ simple?
    http://stackoverflow.com/a/18832732/2114395
    ☐ mocking?
    https://realpython.com/blog/python/testing-third-party-apis-with-mocks/
- b2access
   ☐ automatic refresh proxy?
   ☐ redirect with flask for invalid token?
   ☐ standard for returning credentials
- return token bearer credentials
   ☐ return {'token': token}
     ☐ auth.token_reply
- profiling
   ☐ flask profiler
     https://github.com/muatik/flask-profiler
- release a PyPi package
    ☐ with documentation
    https://pythonhosted.org/
  ☐ fix json: import from jsonify
  ☐ parameters input from reading the json config
  ☐ change base.py into core.py
  ☐ write again a custom response.py
    ☐ what is the motivation of make_custom_response?


==============================================


UNIT TEST:
☐ uploads with random name
☐ users create if testing
☐ A common class
 ☐ startup
   ☐ create users and token
 ☐ end
   ☐ remove users, tokens
   ☐ and any object related to that user
☐ Clean with "finally" if any error

UID:
  ☐ Not for now
  http://stackoverflow.com/a/19580599/2114395
  http://stackoverflow.com/a/6048639/2114395
  http://stackoverflow.com/a/14023468/2114395

  # initial proposal
  12 - 3456789
    ☐ alphanum
    ☐ first 2 chars are reserved to indentify the b2safe instance
      ☐ wp6 should map those code
      ☐ use a /api/internals/mappings/b2safe to manage the list?
    ☐ not uuid (just Unique ID) and as small as possible
      ☐ use path, resource, filename and b2safe code for creating the hash
