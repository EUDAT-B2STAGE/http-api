
Fix:
  ☐ self.send_errors

In "Production" init checks:
  ☐ check if user is default
  ☐ host printing
  (decide one and make a fake)

ERRORS tracing in beta testing:
 ☐ enable with env variable?
 ☐ traceback and string the error
 ☐ save it into db
 ☐ email with id from db, error, timestamp, user

more:
- others
  ☐ change base.py into core.py
  ☐ write again a custom response.py
    ☐ what is the motivation of make_custom_response?
- release a PyPi package
    ☐ with documentation
    https://pythonhosted.org/
    https://medium.com/python-pandemonium/publish-library-in-pypi-77474902819d#.4npyo3iki
- unittest for B2ACCESS...
   ☐ simple?
    http://stackoverflow.com/a/18832732/2114395
    ☐ mocking?
    https://realpython.com/blog/python/testing-third-party-apis-with-mocks/
- With SWAGGER enabled @important
  - general error catching
  with old decorator
  - decorate catch error?
  - swagger ui
    ☐ check boolean defaults
    ☐ make some tests again with the path value
    this one is in production I guess
  - method to convert types
    swagger.py: paramtype == 'int'
    definition.py: current_params.items
  - check if one endpoint definition with two different ids (error)
  - decorated api_method: report_generic_error ?
- Various
  ☐ url_for inside tests
  ☐ remove _latest_token from anywhere (and test)
  ☐ ENVVAR_DEBUG should/could be splitted
    DEBUG in production + B2ACCESS dev
  ☐ deploy documentation
  ☐ lock for double authentications operations (chrome prerendering)
  ☐ fix configurations names and paths in ./confs
- Examples in meta response?
    ☐ example of curl after authorized token?
    ☐ example of curl call after directory creation?
- b2access
   ✔ automatic refresh proxy? @done (17-02-23 07:29)
   ☐ redirect with flask for invalid token?
   ☐ standard for returning credentials
- profiling
   ☐ flask profiler
     https://github.com/muatik/flask-profiler

--- ✄ -----------------------

UNIT TEST:
☐ uploads with random name
☐ users create if testing
☐ A common class
 ☐ startup
   ☐ create users and token
 ☐ end
   ☐ remove users, tokens
   ☐ and any object related to that user
☐ Clean with "finally" if any error
