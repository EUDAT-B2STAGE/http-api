
Refactor:
✘ lru cache in detect? @cancelled (17-04-10 17:07)
☐ injectors
  ☐ check sqlalchemy
    ☐ auth
☐ flask binary
 - development
   ☐ proxy
 - production
   ☐ uwsgi (install in requirements. also nginx?)
   HOME=/tmp for user develop
 - launch test
✔ give error if exception in flask extension? @done (17-04-10 17:10)
☐ call extensions with specific arguments
☐ programmatically Injectors?
  in detect.py


travis ci:
  check the logs
  - skip irods?

getinstance:
☐ advanced connectors
  ☐ celery?
    server.py
    ☐ enable_security
    ☐ worker_mode
    ☐ do tests even if you don't use it
  ☐ check detect.py
  - tofix and todo
    ☐ OPTIONAL service
  - also clean a little bit rapydo.services python folder

builds:
 ✔ swagger-ui @done (17-04-05 06:47)
 ☐ proxy?
  ☐ letsencrypt automatic
☐ move all authentication parts inside flask_ext
☐ compose V3 YAMLs final check
  - debug
  - development
  - production
☐ get_object() and set_object() fix

☐ unittests
  ✔ remove all @done (17-03-22 11:55)
  ☐ fix base
  ☐ fix eudat
☐ docker builds: templates repo
☐ release a PyPi package
  ☐ with documentation
  https://pythonhosted.org/
☐ swagger
  ☐ new ui 3.0 with react










--- ✄ -----------------------

Fix in eudat vanilla:
  ☐ self.send_errors

In "Production" init checks:
  ☐ check if user is default
  ☐ host printing
  (decide one and make a fake)

ERRORS tracing in beta testing:
 ☐ enable with env variable?
 ☐ traceback and string the error
 ☐ save it into db
 ☐ email with id from db, error, timestamp, user

more:
- others
  ☐ write again a custom response.py ?
    ☐ what is the motivation of make_custom_response?
- unittest for B2ACCESS...
   ☐ simple?
    http://stackoverflow.com/a/18832732/2114395
    ☐ mocking?
    https://realpython.com/blog/python/testing-third-party-apis-with-mocks/
- With SWAGGER enabled @important
  - general error catching
  with old decorator
  - decorate catch error?
  - swagger ui @notworkingproperly
    ☐ check boolean defaults
    ☐ make some tests again with the path value
    this one is in production I guess
  - method to convert types
    swagger.py: paramtype == 'int'
    definition.py: current_params.items
  - check if one endpoint definition with two different ids (error)
  - decorated api_method: report_generic_error ?
- Various
  ☐ url_for inside tests
  ☐ remove _latest_token from anywhere (and test)
  ☐ ENVVAR_DEBUG should/could be splitted
    DEBUG in production + B2ACCESS dev
  ☐ deploy documentation
  ☐ lock for double authentications operations (chrome prerendering)
  ☐ fix configurations names and paths in ./confs
- Examples in meta response?
    ☐ example of curl after authorized token?
    ☐ example of curl call after directory creation?
- b2access
   ✔ automatic refresh proxy? @done (17-02-23 07:29)
   ☐ redirect with flask for invalid token?
   ☐ standard for returning credentials
- profiling
   ☐ flask profiler in production mode (nginx+uwsgi)
     https://github.com/muatik/flask-profiler

--- ✄ -----------------------

UNITTESTs:
☐ uploads with random name
☐ users create if testing
☐ A common class
 ☐ startup
   ☐ create users and token
 ☐ end
   ☐ remove users, tokens
   ☐ and any object related to that user
☐ Clean with "finally" if any error
