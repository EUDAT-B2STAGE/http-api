
SWAGGER:
  ✔ check bearer missing in header @done (17-01-13 17:24)
  ✔ fix getting user/pw from configuration at testing time @done (17-01-16 17:12)
  ✔ fix /tmp/gettoken in docker image client @done (17-01-16 17:12)
  ✔ replace mem with mem.customizer @done (17-01-20 07:08)
  ✘ endpoints should become a dictionary, at the moment is a list... @cancelled (17-01-20 12:38)

  - general error catching with old decorator
  - decorate catch error?
  - check boolean defaults from swagger ui

  - method to convert types
    swagger.py: paramtype == 'int'
    definition.py: current_params.items
  - check if one endpoint definition with two different ids (error)
  - decorated api_method: report_generic_error ?

UNITTESTS:
  - by swagger

--- ✄ -----------------------

ERRORS tracing in alpha testing:
 ☐ b2stage_http_api@cineca.it
   ☐ traceback and string the error
   ☐ save it into db
   ☐ response with code and email and/or github issue
   ☐ enable with some variable

Others:
- Various
  ☐ url_for inside tests
  ☐ remove _latest_token from anywhere (and test)
  ☐ ENVVAR_DEBUG should/could be splitted
    DEBUG in production + B2ACCESS dev
  ☐ deploy documentation
  ☐ lock for double authentications operations (chrome prerendering)
  ☐ fix configurations names and paths in ./confs
- Examples in meta response
    ☐ example of curl after authorized token?
    ☐ example of curl call after directory creation?
- Real DB
   ☐ postgres?
     ☐ the same used by irods??
- build sqldminer own image with php alpine?
    https://github.com/vrana/adminer/commit/7a33661b721714a8b266bf57c0065ae653bb8097#commitcomment-17728245
    https://hub.docker.com/r/clue/adminer/~/dockerfile/
- unittest for B2ACCESS...
   ☐ simple?
    http://stackoverflow.com/a/18832732/2114395
    ☐ mocking?
    https://realpython.com/blog/python/testing-third-party-apis-with-mocks/
- b2access
   ☐ automatic refresh proxy?
   ☐ redirect with flask for invalid token?
   ☐ standard for returning credentials
- return token bearer credentials
   ☐ return {'token': token}
     ☐ auth.token_reply
- profiling
   ☐ flask profiler
     https://github.com/muatik/flask-profiler
- release a PyPi package
    ☐ with documentation
    https://pythonhosted.org/
  ☐ fix json: import from jsonify
  ☐ parameters input from reading the json config
  ☐ change base.py into core.py
  ☐ write again a custom response.py
    ☐ what is the motivation of make_custom_response?


==============================================


UNIT TEST:
☐ uploads with random name
☐ users create if testing
☐ A common class
 ☐ startup
   ☐ create users and token
 ☐ end
   ☐ remove users, tokens
   ☐ and any object related to that user
☐ Clean with "finally" if any error
