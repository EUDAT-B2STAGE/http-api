
#Â FIXME: move from backend into RAPyDo

variables:
  # TODO: move this subrepos in a dedicated subfolder like `components`?
  repos:
    rapydo:
      branch: master
      online_url: https://github.com/rapydo/core.git
      path: .
      if: true
    utils:
      branch: master
      online_url: https://github.com/rapydo/utils.git
      path: utilities
      if: true
    backend:
      branch: master
      online_url: https://github.com/rapydo/http-api.git
      path: backend
      if: true
    build-templates:
      branch: master
      online_url: https://github.com/rapydo/build-templates.git
      path: builds_base
      if: true
    frontend:
      branch: master
      # online_url: https://github.com/rapydo/node-ui.git
      online_url: https://github.com/rapydo/angularjs-on-flask.git
      path: frontend
      if: $$frontend
  backend:
    branch: master
    credentials:
      username: user@nomail.org
      password: test
      roles:
        user: normal_user
        internal: staff_user
        admin: admin_root
        default: normal_user
  frontend:
    env:
      some: var
    enable: false
    branch: master
  env:
    # COMPOSE_PROJECT_NAME: $PLACEHOLDER
    # PROJECT_DOMAIN: myserver.mydomain.dev  # deprecated
    API_MAIN_ENDPOINT: status
    DB_SUBNET: 172.1.0.0  # FIXME: see issue
    JWT_APP_SECRETS: /jwt_tokens
    ALCHEMY_HOST: psqldb.dockerized.io
    ALCHEMY_PORT: 5432
    GRAPHDB_HOST: matrix.dockerized.io
    GRAPHDB_BOLT_PORT: 7687
    IRODS_HOST: rodserver.dockerized.io
    IRODS_PORT: 1247
    MONGO_HOST: mongo.dockerized.io
    FLASK_HOST: apiserver.dockerized.io
    FLASK_DEFAULT_PORT: 5000
    CELERY_BROKER_HOST: broker.dockerized.io
    PROXY_HOST: myproxy.dockerized.io
    PROXY_DEV_PORT: 80
    PROXY_PROD_PORT: 443
    LETSENCRYPT_MODE: --staging
    FULL_JWT: true

controller:
  commands:
    ssl_certificates:
      name: letsencrypt
      description: Issue a production certificate with service Letsencrypt
      command: updatecertificates
      service: proxy
      user: root

project:
  name: rapydo
  title: REST HTTP-API server with Python, Flask and Docker
  version: v0.1
  description: No description yet

tags:
  specifications: JSON with SWAGGER standards for any REST client
  base: endpoints for base operations
  helpers: tools for checking status and privileges
  authentication: log in and out of the REST API
  profiles: set and view profile for current credentials
  open_sessions: manage authorized sessions
